public class User
{
    public string Name { get; set; }
    public string Email { get; set; }
    public string Role { get; set; }

    public User(string name, string email, string role)
    {
        Name = name;
        Email = email;
        Role = role;
    }
}

public class UserManager
{
    private List<User> users = new List<User>();

    public void AddUser(User user)
    {
        users.Add(user);
        Console.WriteLine($"User {user.Name} added.");
    }

    public void RemoveUser(string email)
    {
        var user = users.FirstOrDefault(u => u.Email == email);
        if (user != null)
        {
            users.Remove(user);
            Console.WriteLine($"User {user.Name} removed.");
        }
        else
        {
            Console.WriteLine("User not found.");
        }
    }

    public void UpdateUser(string email, string newName, string newRole)
    {
        var user = users.FirstOrDefault(u => u.Email == email);
        if (user != null)
        {
            user.Name = newName;
            user.Role = newRole;
            Console.WriteLine($"User {user.Name} updated.");
        }
        else
        {
            Console.WriteLine("User not found.");
        }
    }
}

//Приминение принципов DRY, KISS, YAGNI
public class UserManager
{
    private List<User> users = new List<User>();

    private User FindUserByEmail(string email)
    {
        return users.FirstOrDefault(u => u.Email == email);
    }

    public void AddUser(User user)
    {
        users.Add(user);
        Console.WriteLine($"User {user.Name} added.");
    }

    public void RemoveUser(string email)
    {
        var user = FindUserByEmail(email);
        if (user != null)
        {
            users.Remove(user);
            Console.WriteLine($"User {user.Name} removed.");
        }
        else
        {
            Console.WriteLine("User not found.");
        }
    }

    public void UpdateUser(string email, string newName, string newRole)
    {
        var user = FindUserByEmail(email);
        if (user != null)
        {
            user.Name = newName;
            user.Role = newRole;
            Console.WriteLine($"User {user.Name} updated.");
        }
        else
        {
            Console.WriteLine("User not found.");
        }
    }
}


class Program
{
    static void Main(string[] args)
    {
        UserManager userManager = new UserManager();

        // Добавление пользователей
        userManager.AddUser(new User("Alice", "alice@example.com", "Admin"));
        userManager.AddUser(new User("Bob", "bob@example.com", "User"));

        // Обновление пользователя
        userManager.UpdateUser("bob@example.com", "Bobby", "Admin");

        // Удаление пользователя
        userManager.RemoveUser("alice@example.com");
    }
}

